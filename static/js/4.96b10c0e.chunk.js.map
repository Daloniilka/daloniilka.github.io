{"version":3,"sources":["components/Dialogs/StyleDialogs/Dialogs.module.css","components/Dialogs/DialogItem/StyleDialogsItem/DialogsItem.module.css","components/Dialogs/Message/StyleMessage/Message.module.css","components/Dialogs/DialogItem/DialogsItem.tsx","components/Dialogs/Message/Messages.tsx","components/Dialogs/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","link","id","to","className","s","item","activeClassName","namec","src","alt","name","Message","line","namenc","messeg","message","maxLengh","maxLenghtCrater","ReduxMessageForm","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","Field","placeholder","validate","required","component","TextArea","writ","button","Dialogs","state","dialogs","dialogsElement","map","d","messageElement","m","content","dialogs_item","messenges","body","sendtext","textarea","compose","connect","dialogsPage","actions","withAuthRederect"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,aAAe,8BAA8B,KAAO,sBAAsB,GAAK,oBAAoB,UAAY,2BAA2B,KAAO,sBAAsB,OAAS,0B,oBCAxQD,EAAOC,QAAU,CAAC,KAAO,4B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,wBAAwB,OAAS,0B,+GCuB1EC,EAdqB,SAACC,GACjC,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,eAAC,IAAD,CAASC,GAAIF,EAAMG,UAAWC,IAAEC,KAAMC,gBAAiBF,IAAEG,MAAzD,UAEI,qBAAKC,IAAI,6EAA6EC,IAAI,KAC1F,+BAAOV,EAAMW,W,kBCOVC,EAdkB,SAACZ,GAC9B,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,cAAC,IAAD,CAASC,GAAIF,EAAMG,UAAWC,IAAEQ,KAAMN,gBAAiBF,IAAES,OAAzD,SAEI,uBAAMV,UAAWC,IAAEU,OAAnB,cAA6Bf,EAAMgB,c,mDCRzCC,EAAWC,YAAgB,KA6BpBC,EAAmBC,YAAiC,CAC7DC,KAAM,WACNC,gBALgB,SAACC,EAAgBC,GAAjB,OAChBA,EAASC,YAAM,eAEaL,EAzB+D,SAACpB,GAE5F,OACI,uBAAM0B,SAAU1B,EAAM2B,aAAtB,UACI,8BAEI,cAACC,EAAA,EAAD,CAAOC,YAAY,qBAAqBlB,KAAK,WACtCmB,SAAU,CAACC,IAAUd,GACrBe,UAAWC,IAAU7B,UAAWC,IAAE6B,SAK7C,8BACI,cAAC,IAAD,CAAQ9B,UAAWC,IAAE8B,OAAQxB,KAAM,SAAnC,0BCoBDyB,EA9BkB,SAACpC,GAE9B,IAAIqC,EAAQrC,EAAMsC,QAEdC,EAAiBF,EAAMC,QAAQE,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAY9B,KAAM8B,EAAE9B,KAAMT,GAAIuC,EAAEvC,QACxEwC,EAAiBL,EAAMrB,QAAQwB,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAAS3B,QAAS2B,EAAE3B,QAASd,GAAIyC,EAAEzC,QAO/E,OACI,qBAAKE,UAAWC,IAAEuC,QAAlB,SACI,sBAAKxC,UAAWC,IAAEiC,QAAlB,UACI,qBAAKlC,UAAWC,IAAEwC,aAAlB,SACKN,IAEL,sBAAKnC,UAAWC,IAAEyC,UAAlB,UACI,8BAAMJ,IACN,8BACI,cAACvB,EAAD,CAAkBO,SAblB,SAACqB,GACjB/C,EAAMgD,SAASD,EAAKE,wB,yBCVbC,sBACXC,aAPkB,SAACd,GACnB,MAAO,CACHC,QAASD,EAAMe,eAMf,CACIJ,SAAUK,IAAQL,WAG1BM,IANWJ,CAObd","file":"static/js/4.96b10c0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__2A1WA\",\"dialogs\":\"Dialogs_dialogs__MX_qW\",\"dialogs_item\":\"Dialogs_dialogs_item__n9kkv\",\"item\":\"Dialogs_item__1L2qz\",\"ex\":\"Dialogs_ex__EiNXx\",\"messenges\":\"Dialogs_messenges__15-2g\",\"writ\":\"Dialogs_writ__27mYW\",\"button\":\"Dialogs_button__3y9mD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogsItem_item__2yjgs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"Message_line__33uca\",\"messeg\":\"Message_messeg__1rY3F\",\"namenc\":\"Message_namenc__2PBIr\"};","import {NavLink} from \"react-router-dom\"\nimport s from \"./StyleDialogsItem/DialogsItem.module.css\"\nimport React from \"react\";\n\n\ntype Props = {\n    id: number\n    name: string\n}\n\nconst DialogItem: React.FC<Props> = (props) => {\n    let link = \"/dialogs/\" + props.id;\n\n    return (\n        <NavLink to={link} className={s.item} activeClassName={s.namec}>\n\n            <img src=\"https://ru-static.z-dn.net/files/d88/d7d8682550c7d82c06aa04031bd7cda4.jpeg\" alt=\"\"/>\n            <span>{props.name}</span>\n\n        </NavLink>\n    )\n}\n\n\nexport default DialogItem","import {NavLink} from \"react-router-dom\"\nimport s from \"./StyleMessage/Message.module.css\"\nimport React from \"react\";\n\n\ntype Props = {\n    id: number\n    message: string\n}\n\nconst Message: React.FC<Props> = (props) => {\n    let link = \"/dialogs/\" + props.id;\n\n    return (\n        <NavLink to={link} className={s.line} activeClassName={s.namenc}>\n\n            <span className={s.messeg}> {props.message}</span>\n\n        </NavLink>\n\n    )\n}\n\n\nexport default Message","import {Field, InjectedFormProps, reduxForm, reset} from \"redux-form\";\nimport {createField, Input, TextArea} from \"../common/FormsControl/FormContorl\";\nimport {maxLenghtCrater, required} from \"../../Utils/Validators/validator\";\nimport s from \"./StyleDialogs/Dialogs.module.css\";\nimport React from \"react\";\nimport {DialogsNewMessegeType} from \"./Dialogs\";\nimport {Button} from \"antd\";\n\nconst maxLengh = maxLenghtCrater(300)\n\n\ntype PropsType = {}\nconst MessageForm: React.FC<InjectedFormProps<DialogsNewMessegeType, PropsType> & PropsType> = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n\n                <Field placeholder=\"Enter your message\" name=\"textarea\"\n                       validate={[required, maxLengh]}\n                       component={TextArea} className={s.writ}/>\n\n            </div>\n\n\n            <div>\n                <Button className={s.button} name={\"button\"}>Send</Button>\n            </div>\n        </form>\n\n    )\n\n}\n\nconst afterSubmit = (result: string, dispatch: Function) =>\n    dispatch(reset('textarea'));\n\nexport const ReduxMessageForm = reduxForm<DialogsNewMessegeType>({\n    form: 'textarea',\n    onSubmitSuccess: afterSubmit,\n\n})(MessageForm)\n","import s from \"./StyleDialogs/Dialogs.module.css\"\nimport React from 'react';\nimport DialogItem from \"./DialogItem/DialogsItem\";\nimport Message from \"./Message/Messages\";\nimport {ReduxMessageForm} from \"./AddMessageForm\";\nimport {initialStateType} from \"../../Redux/dialogs-reducer\";\n\n\ntype Props = {\n    dialogs: initialStateType\n    sendtext: (message: string) => void\n}\nexport type DialogsNewMessegeType = {\n    textarea:string\n}\n\nconst Dialogs: React.FC<Props> = (props) => {\n\n    let state = props.dialogs\n\n    let dialogsElement = state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\n    let messageElement = state.message.map(m => <Message message={m.message} id={m.id}/>);\n\n\n    let onmessagetext = (body:  DialogsNewMessegeType ) => {\n        props.sendtext(body.textarea)\n    }\n\n    return (\n        <div className={s.content}>\n            <div className={s.dialogs}>\n                <div className={s.dialogs_item}>\n                    {dialogsElement}\n                </div>\n                <div className={s.messenges}>\n                    <div>{messageElement}</div>\n                    <div>\n                        <ReduxMessageForm onSubmit={onmessagetext}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Dialogs","import React from 'react';\nimport {actions} from \"../../Redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRederect} from \"../../hoc/withAuthRederect\";\nimport {compose} from \"redux\";\nimport {AppStateType} from \"../../Redux/redux-store\";\n\n\nlet mapStateToprops = (state: AppStateType) => {\n    return {\n        dialogs: state.dialogsPage,\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToprops,\n        {\n            sendtext: actions.sendtext,\n        }\n    ),\n    withAuthRederect\n)(Dialogs)"],"sourceRoot":""}